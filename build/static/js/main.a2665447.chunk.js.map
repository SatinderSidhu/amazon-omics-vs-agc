{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,qCACdC,cAAe,CACd,CAAEC,WAAY,qBAAsBC,WAAW,GAC/C,CAAED,WAAY,yBAA0BC,WAAW,KAGrD,CACCH,aAAc,0CACdC,cAAe,CACd,CAAEC,WAAY,qBAAsBC,WAAW,GAC/C,CAAED,WAAY,yBAA0BC,WAAW,KAGrD,CACCH,aAAc,oCACdC,cAAe,CACd,CAAEC,WAAY,qBAAsBC,WAAW,GAC/C,CAAED,WAAY,yBAA0BC,WAAW,KAGrD,CACCH,aAAc,4FACdC,cAAe,CACd,CAAEC,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,oBAAqBC,WAAW,KAGhD,CACCH,aAAc,yFACdC,cAAe,CACd,CAAEC,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,KAAMC,WAAW,KAGjC,CACCH,aAAc,sDACdC,cAAe,CACd,CAAEC,WAAY,8BAA+BC,WAAW,GACxD,CAAED,WAAY,KAAMC,WAAW,KAGjC,CACCH,aAAc,mFACdC,cAAe,CACd,CAAEC,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,KAAMC,WAAW,MAhDL,EAqDiBC,mBAAS,GArD1B,mBAqDtBC,EArDsB,KAqDLC,EArDK,OAsDKF,oBAAS,GAtDd,mBAsDtBG,EAtDsB,KAsDXC,EAtDW,OAuDHJ,mBAAS,GAvDN,mBAuDtBK,EAvDsB,KAuDfC,EAvDe,KAqE7B,OACC,yBAAKC,UAAU,OACbJ,EACA,yBAAKI,UAAU,iBAAf,cACaF,EADb,WAC4BV,EAAUa,QAGtC,oCACC,yBAAKD,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBN,EAAkB,GADnC,IAC8CN,EAAUa,QAExD,yBAAKD,UAAU,iBAAiBZ,EAAUM,GAAiBL,eAE5D,yBAAKW,UAAU,kBACbZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAD,OAC7C,4BAAQC,QAAS,kBA5BS,SAACZ,GAC5BA,GACHO,EAASD,EAAQ,GAGlB,IAAMO,EAAeX,EAAkB,EACnCW,EAAejB,EAAUa,OAC5BN,EAAmBU,GAEnBR,GAAa,GAmBcS,CAAwBH,EAAaX,aAAaW,EAAaZ,kBClF7FgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtB,EAAD,OAEFuB,SAASC,eAAe,U","file":"static/js/main.a2665447.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'Do you want to use Spot Instances?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (you need AGC)', isCorrect: true },\n\t\t\t\t{ answerText: 'No (lets explore more)', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you need to run Snakemake workflows?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (you need AGC)', isCorrect: true },\n\t\t\t\t{ answerText: 'No (lets explore more)', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you need to run CWL workflows?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (you need AGC)', isCorrect: true },\n\t\t\t\t{ answerText: 'No (lets explore more)', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Are you able to dockerize you bioinformatic tools + upload them into a private repositor?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes', isCorrect: false },\n\t\t\t\t{ answerText: 'No (you need AGC)', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you want control over which instances and instance sizes to use for your workloads?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (AGC)', isCorrect: true },\n\t\t\t\t{ answerText: 'No', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you want to run workflows with minimal overhead?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (you need Amazon Omics)', isCorrect: false },\n\t\t\t\t{ answerText: 'No', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Do you need an end-to-end solution for storage, secondary and tertiary analysis?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Yes (Omics)', isCorrect: false },\n\t\t\t\t{ answerText: 'No', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}